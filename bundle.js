(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var a=t(537),r=t.n(a),o=t(645),i=t.n(o),A=t(667),s=t.n(A),c=new URL(t(172),t.b),d=i()(r());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Noto+Sans:wght@300;400;500;600;700;900&family=Signika+Negative:wght@400;500;600;700&display=swap);"]);var l=s()(c);d.push([n.id,`:root {\n  --slate100: #f1f5f9;\n  --slate200: #e2e8f0;\n  --slate300: #cbd5e1;\n  --slate400: #94a3b8;\n  --slate500: #64748b;\n  --slate700: #334155;\n  --slate800: #1e293b;\n\n  --red500: #ef4444;\n\n  --emerald400: #34d399;\n  --sky400: #38bdf8;\n\n\n  /* Bootstrap icon Arrow bar left ::before > content*/\n  --minimize-icon: url(${l});\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  display: grid;\n  height: 100vh;\n  width: 100vw;\n  background: var(--slate100);\n\n  font-family: 'Noto Sans', Arial, Helvetica, sans-serif;\n\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1fr 5fr;\n  grid-template-areas: \n    "nav header"\n    "nav main";\n}\n\n.nav-section {\n  grid-area: nav;\n\n  display: flex;\n  flex-direction: column;\n  gap: 0.8em;\n  padding-top: 2em;\n\n  color: var(--slate700);\n  background: linear-gradient(100deg, var(--sky400), var(--emerald400));\n\n  border-bottom-right-radius: 25px;\n}\n\n.nav-section h1 {\n  font-family: 'Signika Negative', Arial, Helvetica, sans-serif;\n  font-weight: 700;\n  font-size: 3em;\n  letter-spacing: 0.1em;\n  border-bottom: 5px solid var(--slate700);\n  margin-bottom: 0.2em;\n}\n\n.nav-section h1,\n.nav-section h2 {\n  align-self: center;\n}\n\n.nav-section h2 {\n  font-size: 2em;\n  font-weight: 700;\n  border-bottom: 4px solid var(--slate700);\n  margin-bottom: 0.2em;\n}\n\n.nav-section h3 {\n  align-self: center;\n  font-size: 1.2em;\n  padding-left: 1em;\n  color: var(--slate800);\n}\n\n.project-div-container {\n  display: flex;\n  justify-content: space-between;\n  padding-right: 0.8em;\n  height: 2.5em;\n  cursor: pointer;\n}\n\n.project-div-creating {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 5em;\n  gap: 0.5em;\n}\n\n.project-name-input {\n  box-sizing: border-box;\n  width: 80%;\n  font-size: 1.2em;\n  padding: 0.2em;\n  padding-left: 0.3em;\n  color: var(--slate800);\n  background: var(--slate200);\n\n  border: none;\n  border-radius: 8px;\n  outline: none;\n}\n\n.project-name-input:focus {\n  outline: 2px solid var(--slate500);\n}\n\n.cancel-creating-btn,\n.add-creating-btn {\n  border: none;\n  height: 2em;\n  font-weight: 700;\n  font-size: 0.9em;\n  border-radius: 8px;\n  box-shadow: 2px 2px 10px -2px var(--slate700);\n  color: var(--slate500);\n  background: var(--slate200);\n}\n\n.cancel-creating-btn {\n  margin-right: 1em;\n  width: 6em;\n}\n\n.add-creating-btn {\n  width: 4em;\n}\n\n.project-div-container button {\n  background: none;\n  border: none;\n  height: 80%;\n  width: 1.2em;\n  font-size: 1.5em;\n  font-weight: 700;\n  color: var(--slate700);\n  align-self: center;\n}\n\n.project-div-container button:hover {\n  background: var(--red500);\n  color: var(--slate800);\n  border-radius: 4px;\n}\n\n.project-div-container:hover {\n  background: linear-gradient(90deg, var(--slate200), var(--slate300));\n}\n\n.create-projects-btn {\n  align-self: center;\n  width: 60%;\n  height: 2.5em;\n  font-size: 1.2em;\n  font-weight: 700;\n  color: var(--slate500);\n  background: var(--slate200);\n\n  border: none;\n  border-radius: 10px;\n  box-shadow: 2px 2px 10px -2px var(--slate700);\n}\n\n.create-projects-btn:hover,\n.cancel-creating-btn:hover,\n.add-creating-btn:hover {\n  color: var(--slate800);\n  background: var(--slate300);\n  box-shadow: none;\n}\n\n\n.header-section {\n  grid-area: header;\n\n  display: flex;\n  padding-left: 12.5em;\n  margin-bottom: 1em;\n}\n\n.header-project-text {\n  font-family: 'Signika Negative', Arial, Helvetica, sans-serif;\n  font-size: 3em;\n  align-self: flex-end;\n  color: var(--slate700);\n}\n\n.main-section {\n  grid-area: main;\n\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.main-container {\n  width: 80%;\n  height: 90%;\n\n  background: var(--slate200);\n  border-radius: 40px;\n  box-shadow: 0 0 12px -5px var(--slate800);\n}\n\n\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;;EAEnB,iBAAiB;;EAEjB,qBAAqB;EACrB,iBAAiB;;;EAGjB,oDAAoD;EACpD,wDAA2Z;AAC7Z;;AAEA;EACE,sBAAsB;EACtB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,aAAa;EACb,YAAY;EACZ,2BAA2B;;EAE3B,sDAAsD;;EAEtD,8BAA8B;EAC9B,2BAA2B;EAC3B;;cAEY;AACd;;AAEA;EACE,cAAc;;EAEd,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,gBAAgB;;EAEhB,sBAAsB;EACtB,qEAAqE;;EAErE,gCAAgC;AAClC;;AAEA;EACE,6DAA6D;EAC7D,gBAAgB;EAChB,cAAc;EACd,qBAAqB;EACrB,wCAAwC;EACxC,oBAAoB;AACtB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,gBAAgB;EAChB,wCAAwC;EACxC,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,oBAAoB;EACpB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,sBAAsB;EACtB,UAAU;EACV,gBAAgB;EAChB,cAAc;EACd,mBAAmB;EACnB,sBAAsB;EACtB,2BAA2B;;EAE3B,YAAY;EACZ,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,kCAAkC;AACpC;;AAEA;;EAEE,YAAY;EACZ,WAAW;EACX,gBAAgB;EAChB,gBAAgB;EAChB,kBAAkB;EAClB,6CAA6C;EAC7C,sBAAsB;EACtB,2BAA2B;AAC7B;;AAEA;EACE,iBAAiB;EACjB,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,gBAAgB;EAChB,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,oEAAoE;AACtE;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,aAAa;EACb,gBAAgB;EAChB,gBAAgB;EAChB,sBAAsB;EACtB,2BAA2B;;EAE3B,YAAY;EACZ,mBAAmB;EACnB,6CAA6C;AAC/C;;AAEA;;;EAGE,sBAAsB;EACtB,2BAA2B;EAC3B,gBAAgB;AAClB;;;AAGA;EACE,iBAAiB;;EAEjB,aAAa;EACb,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA;EACE,6DAA6D;EAC7D,cAAc;EACd,oBAAoB;EACpB,sBAAsB;AACxB;;AAEA;EACE,eAAe;;EAEf,aAAa;EACb,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,UAAU;EACV,WAAW;;EAEX,2BAA2B;EAC3B,mBAAmB;EACnB,yCAAyC;AAC3C",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Noto+Sans:wght@300;400;500;600;700;900&family=Signika+Negative:wght@400;500;600;700&display=swap\');\n\n:root {\n  --slate100: #f1f5f9;\n  --slate200: #e2e8f0;\n  --slate300: #cbd5e1;\n  --slate400: #94a3b8;\n  --slate500: #64748b;\n  --slate700: #334155;\n  --slate800: #1e293b;\n\n  --red500: #ef4444;\n\n  --emerald400: #34d399;\n  --sky400: #38bdf8;\n\n\n  /* Bootstrap icon Arrow bar left ::before > content*/\n  --minimize-icon: url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="58" height="58" fill="%231e293b" class="bi bi-arrow-bar-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M12.5 15a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 1 0v13a.5.5 0 0 1-.5.5ZM10 8a.5.5 0 0 1-.5.5H3.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L3.707 7.5H9.5a.5.5 0 0 1 .5.5Z"/></svg>\');\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  display: grid;\n  height: 100vh;\n  width: 100vw;\n  background: var(--slate100);\n\n  font-family: \'Noto Sans\', Arial, Helvetica, sans-serif;\n\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1fr 5fr;\n  grid-template-areas: \n    "nav header"\n    "nav main";\n}\n\n.nav-section {\n  grid-area: nav;\n\n  display: flex;\n  flex-direction: column;\n  gap: 0.8em;\n  padding-top: 2em;\n\n  color: var(--slate700);\n  background: linear-gradient(100deg, var(--sky400), var(--emerald400));\n\n  border-bottom-right-radius: 25px;\n}\n\n.nav-section h1 {\n  font-family: \'Signika Negative\', Arial, Helvetica, sans-serif;\n  font-weight: 700;\n  font-size: 3em;\n  letter-spacing: 0.1em;\n  border-bottom: 5px solid var(--slate700);\n  margin-bottom: 0.2em;\n}\n\n.nav-section h1,\n.nav-section h2 {\n  align-self: center;\n}\n\n.nav-section h2 {\n  font-size: 2em;\n  font-weight: 700;\n  border-bottom: 4px solid var(--slate700);\n  margin-bottom: 0.2em;\n}\n\n.nav-section h3 {\n  align-self: center;\n  font-size: 1.2em;\n  padding-left: 1em;\n  color: var(--slate800);\n}\n\n.project-div-container {\n  display: flex;\n  justify-content: space-between;\n  padding-right: 0.8em;\n  height: 2.5em;\n  cursor: pointer;\n}\n\n.project-div-creating {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 5em;\n  gap: 0.5em;\n}\n\n.project-name-input {\n  box-sizing: border-box;\n  width: 80%;\n  font-size: 1.2em;\n  padding: 0.2em;\n  padding-left: 0.3em;\n  color: var(--slate800);\n  background: var(--slate200);\n\n  border: none;\n  border-radius: 8px;\n  outline: none;\n}\n\n.project-name-input:focus {\n  outline: 2px solid var(--slate500);\n}\n\n.cancel-creating-btn,\n.add-creating-btn {\n  border: none;\n  height: 2em;\n  font-weight: 700;\n  font-size: 0.9em;\n  border-radius: 8px;\n  box-shadow: 2px 2px 10px -2px var(--slate700);\n  color: var(--slate500);\n  background: var(--slate200);\n}\n\n.cancel-creating-btn {\n  margin-right: 1em;\n  width: 6em;\n}\n\n.add-creating-btn {\n  width: 4em;\n}\n\n.project-div-container button {\n  background: none;\n  border: none;\n  height: 80%;\n  width: 1.2em;\n  font-size: 1.5em;\n  font-weight: 700;\n  color: var(--slate700);\n  align-self: center;\n}\n\n.project-div-container button:hover {\n  background: var(--red500);\n  color: var(--slate800);\n  border-radius: 4px;\n}\n\n.project-div-container:hover {\n  background: linear-gradient(90deg, var(--slate200), var(--slate300));\n}\n\n.create-projects-btn {\n  align-self: center;\n  width: 60%;\n  height: 2.5em;\n  font-size: 1.2em;\n  font-weight: 700;\n  color: var(--slate500);\n  background: var(--slate200);\n\n  border: none;\n  border-radius: 10px;\n  box-shadow: 2px 2px 10px -2px var(--slate700);\n}\n\n.create-projects-btn:hover,\n.cancel-creating-btn:hover,\n.add-creating-btn:hover {\n  color: var(--slate800);\n  background: var(--slate300);\n  box-shadow: none;\n}\n\n\n.header-section {\n  grid-area: header;\n\n  display: flex;\n  padding-left: 12.5em;\n  margin-bottom: 1em;\n}\n\n.header-project-text {\n  font-family: \'Signika Negative\', Arial, Helvetica, sans-serif;\n  font-size: 3em;\n  align-self: flex-end;\n  color: var(--slate700);\n}\n\n.main-section {\n  grid-area: main;\n\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.main-container {\n  width: 80%;\n  height: 90%;\n\n  background: var(--slate200);\n  border-radius: 40px;\n  box-shadow: 0 0 12px -5px var(--slate800);\n}\n\n\n'],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);a&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},i=[],A=0;A<n.length;A++){var s=n[A],c=a.base?s[0]+a.base:s[0],d=o[c]||0,l="".concat(c," ").concat(d);o[c]=d+1;var p=t(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=r(m,a);a.byIndex=A,e.splice(A,0,{identifier:l,updater:u,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=a(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var A=t(o[i]);e[A].references--}for(var s=a(n,r),c=0;c<o.length;c++){var d=t(o[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},172:n=>{n.exports='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="58" height="58" fill="%231e293b" class="bi bi-arrow-bar-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M12.5 15a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 1 0v13a.5.5 0 0 1-.5.5ZM10 8a.5.5 0 0 1-.5.5H3.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L3.707 7.5H9.5a.5.5 0 0 1 .5.5Z"/></svg>'}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.b=document.baseURI||self.location.href,t.nc=void 0;var a={};(()=>{t.d(a,{H8:()=>L,qL:()=>z,_x:()=>S,q:()=>k});var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),A=t.n(i),s=t(565),c=t.n(s),d=t(216),l=t.n(d),p=t(589),m=t.n(p),u=t(426),g={};g.styleTagTransform=m(),g.setAttributes=c(),g.insert=A().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=l(),e()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;const f=(n,e=!1)=>{v(),k.push({name:n,toDoList:[],active:!0,isDefault:e})};function E(){let n;for(let e=0;e<k.length;e++)!0===k[e].active&&(n=k[e].name);return n}function B(n){return v(),k[n].active=!0,k[n].name}function v(){for(let n=0;n<k.length;n++)k[n].active=!1}function h(){const n=document.querySelector(".header-project-text");for(let e=0;e<k.length;e++)if(n.textContent!==E())return n.textContent=E()}function C(n){f(n,!0);const e=document.createElement("div");e.classList.add("project-div-container");const t=document.createElement("h3");t.textContent=n,S.append(e),e.append(t)}function b(){null===document.querySelector(".project-div-creating")&&function(){const n=document.querySelector(".create-projects-btn"),e=document.createElement("div");e.classList.add("project-div-creating");const t=document.createElement("input");t.classList.add("project-name-input");const a=document.createElement("div"),r=document.createElement("button");r.classList.add("cancel-creating-btn"),r.textContent="Cancel",r.addEventListener("click",x);const o=document.createElement("button");o.classList.add("add-creating-btn"),o.textContent="Add",o.addEventListener("click",y),S.insertBefore(e,n),e.append(t,a),a.append(r,o),t.focus()}()}function x(){document.querySelector(".project-div-creating").remove()}function y(){const n=document.querySelector(".project-name-input").value;n&&(function(n){const e=document.querySelector(".create-projects-btn"),t=document.createElement("div");t.classList.add("project-div-container");const a=document.createElement("h3");a.textContent=n;const r=document.createElement("button");r.textContent="X",r.addEventListener("click",w),S.insertBefore(t,e),t.append(a,r),x()}(n),f(n),console.log(k))}function w(){this.parentElement.remove();for(let e=0;e<k.length;e++)this.previousSibling.textContent===k[e].name&&(!0===k[n=e].active&&(k[0].active=!0),!0!==k[n].isDefault&&k.splice(n,1),console.log(k));var n}const j=function(){document.querySelectorAll(".project-div-container").forEach((n=>n.addEventListener("click",(n=>{for(let e=0;e<k.length;e++)n.target.innerText===k[e].name&&(B(e),E(),h(),console.log("TEST"))}))))};let k=[];const S=document.createElement("div");S.classList.add("nav-section");const L=document.createElement("div");L.classList.add("header-section");const z=document.createElement("div");z.classList.add("main-section"),document.body.append(S,L,z),function(){const n=document.createElement("h1");n.textContent="ToDo List";const e=document.createElement("h2");e.textContent="Projects",S.append(n),C("All"),C("Today"),C("Important"),S.append(e),function(){document.createElement("div").classList.add("project-div-container");const n=document.createElement("button");n.classList.add("create-projects-btn"),n.textContent="Create Project",n.addEventListener("click",b),S.append(n)}()}(),function(){const n=document.createElement("h2");n.classList.add("header-project-text"),n.textContent=B(0),L.append(n)}(),function(){const n=document.createElement("div");n.classList.add("main-container"),z.append(n)}(),j()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,